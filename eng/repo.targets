<Project>
  <Import Project="..\Directory.Build.props" />
  <Import Project="Build.props" />

  <Target Name="GenerateProjectList">
    <MSBuild Projects="@(ProjectToBuild)"
             Targets="GetReferencesProvided"
             BuildInParallel="true"
             SkipNonexistentTargets="true"
             SkipNonexistentProjects="true" >

      <Output TaskParameter="TargetOutputs" ItemName="_ProjectReferenceProvider"/>
    </MSBuild>

    <ItemGroup>
      <_ProjectReferenceProvider>
        <NormalizedPath>$([System.String]::new('%(ProjectFileRelativePath)').Replace('/','\'))</NormalizedPath>
      </_ProjectReferenceProvider>

      <_ProjectReferenceProviderWithRefAssembly Include="@(_ProjectReferenceProvider->HasMetadata('ReferenceAssemblyProjectFileRelativePath'))" />
      <_ProjectReferenceProviderWithRefAssembly>
        <NormalizedRefPath>$([System.String]::new('%(ReferenceAssemblyProjectFileRelativePath)').Replace('/','\'))</NormalizedRefPath>
      </_ProjectReferenceProviderWithRefAssembly>

      <_ProjectReferenceProvider Remove="@(_ProjectReferenceProviderWithRefAssembly)" />
    </ItemGroup>

    <PropertyGroup>
      <ProjectListFile>$(MSBuildThisFileDirectory)..\eng\ProjectReferences.props</ProjectListFile>
      <ProjectListContent><![CDATA[
<!-- This file is automatically generated. Run `./eng/scripts/GenerateProjectList.ps1` to update. -->
<Project>
  <ItemGroup>
    @(_ProjectReferenceProvider->'<ProjectReferenceProvider Include="%(Identity)" ProjectPath="%24(RepoRoot)%(NormalizedPath)"  />', '%0A    ')
    @(_ProjectReferenceProviderWithRefAssembly->'<ProjectReferenceProvider Include="%(Identity)" ProjectPath="%24(RepoRoot)%(NormalizedPath)" RefProjectPath="%24(RepoRoot)%(NormalizedRefPath)" />', '%0A    ')
  </ItemGroup>
</Project>
]]></ProjectListContent>
    </PropertyGroup>

    <!-- Workaround https://github.com/Microsoft/msbuild/issues/1024 -->
    <WriteLinesToFile Condition="'$(OS)' == 'Windows_NT'"
                      File="$(ProjectListFile)" Lines="$([MSBuild]::Escape($(ProjectListContent)))" Overwrite="true" />
    <Exec Condition="'$(OS)' != 'Windows_NT'"
          Command="echo '$(ProjectListContent.Replace('\t','\\t'))' > $(ProjectListFile)" />
  </Target>

</Project>
